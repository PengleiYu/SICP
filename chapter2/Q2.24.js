import {pair, head, tail, display, display_list, list, is_null, is_pair, length} from "sicp";

// 画出复杂列表的树结构
(function () {
    // 练习2.24 假定我们需要求值表达式list（1, list(2, list(3, 4))）​，请给出解释器打印的结果，画出对应的盒子指针结构，
    // 并把它解释为一棵树（参看图2.6）​。

    const x = list(1, list(2, list(3, 4)));
    display(x);
    display_list(x);

    // ┌───┬───┐     ┌───┬───┐
    // │ 1 │ ──────▶ │   │ / │
    // └───┴───┘     └─┬─┴───┘
    //                 ▼
    //                ┌───┬───┐     ┌───┬───┐
    //                │ 2 │ ──────▶ │   │ / │
    //                └───┴───┘     └─┬─┴───┘
    //                                ▼
    //                              ┌───┬───┐     ┌───┬───┐
    //                              │ 3 │ ──────▶ │ 4 │ / │
    //                              └───┴───┘     └───┴───┘
})()
